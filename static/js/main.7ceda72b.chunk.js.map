{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","findMovie","title","a","url","fetch","response","json","FindMovie","onAddMovie","useState","querySearch","setQuerySearch","setMovie","isLoading","setIsLoading","errorMessage","setErrorMessage","loadMovie","query","movieFromServer","Response","Error","htmlFor","onChange","event","target","value","type","id","placeholder","onClick","classNames","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ceda72b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const apikey = 'b05ea2b9';\nconst API_URL = 'https://www.omdbapi.com';\n\nexport const findMovie = async (title: string): Promise<Movie> => {\n  const url = `${API_URL}?apikey=${apikey}&t=${title}`;\n\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { findMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [querySearch, setQuerySearch] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loadMovie = async (query: string) => {\n    try {\n      setIsLoading(true);\n      const movieFromServer = await findMovie(query);\n\n      if (movieFromServer.Response === 'False') {\n        setErrorMessage(movieFromServer.Error);\n      } else {\n        setMovie(movieFromServer);\n      }\n    } catch (error) {\n      throw new Error(`${error}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSetMovie = (newMovie: Movie) => {\n    onAddMovie(newMovie);\n    setMovie(null);\n    setQuerySearch('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                onChange={(event) => {\n                  setQuerySearch(event?.target.value);\n                  setErrorMessage('');\n                }}\n                value={querySearch}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n              />\n            </div>\n          </label>\n\n          {errorMessage && (\n            <p className=\"help is-danger\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onClick={() => loadMovie(querySearch)}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              onClick={() => {\n                if (movie) {\n                  handleSetMovie(movie);\n                }\n              }}\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <div\n          className={classNames('loader-wrapper', { 'is-active': isLoading })}\n        >\n          <div\n            className=\"loader is-loading\"\n          />\n        </div>\n\n        {movie\n        && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movieFromServer: Movie) => {\n    if (!movies.some(({ imdbID }) => movieFromServer.imdbID === imdbID)) {\n      setMovies([...movies, movieFromServer]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}